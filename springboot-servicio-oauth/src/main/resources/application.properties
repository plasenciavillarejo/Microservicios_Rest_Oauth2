spring.application.name=servicio-oauth
server.port=9100


###########################################################################################################################################################
# Registramos la url de EUREKA
# Tengo que indicar la instancia de hostname o no me podrá resolver el nombre -> (resolver.dns.DnsResolveContext.finishResolve(DnsResolveContext.java:1013)
###########################################################################################################################################################
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:8761/eureka

#######################################################################################
# Configuracion de SpringConfig necesario desde la versión 2.4 en adelante
# Está configuración tiene que ver con la dependencia -> spring-cloud-starter-bootstrap
# Se utiliza para especificar que la aplicación puede importar su configuración desde un servidor de configuración, si está disponible, pero también puede funcionar sin él.
#######################################################################################
spring.config.import=optional:configserver:


##########################
## Configuración Zipkin ##
##########################

#Probabilidad en las que va a enviar las trazas, por defecto es un 10%, lo cambiamos a 1%
spring.sleuth.sampler.probability=1.0
# Opcional configurar la ruta de zipkin, por defecto lo va a buscar en la misma ruta -> http://localhost:9411/
spring.zipkin.base-url=http://localhost:9411/
# Para que envíe las trazas a RABBIT se debe de indicar lo siguiente
spring.zipkin.sender.type=rabbit