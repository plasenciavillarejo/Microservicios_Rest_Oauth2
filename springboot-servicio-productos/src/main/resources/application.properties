### Configuración de microservicio.
# Tenemos que dar un nombre a nuestro servicio, cada servicio tiene que tener un identificado
# Para cuando sea migrado a EUREKA podamos acceder a este recurso mediante el nombre y no mediante la ip/host.
spring.application.name=servicio-productos

########################################################################################################################################
########################################################################################################################################
# Comenamos la forma en la que seteamos el puerto para hacerlo de forma automática, de está forma podemos levantar muchas instancias
# Esto solo debemos de utilizarlo en el microservicio que queremos escalar y es necesario tener varias instancias 
#server.port=8001
server.port=${PORT:0}

# Al añadir de forma automática el puerto también añadimos una instacia a eureka automática
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_i:${random.value}}

# Indicamos cual es nuestro servidor EUREKA
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:8761/eureka

########################################################################################################################################
########################################################################################################################################


### Conexión a H2.
##################
# Se realiza de forma automática

# Necesario para que me detecte el import.sql
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
logging.level.org.hibernate.SQL=debug


#########################
## Configuración Zipkin ##
#########################

#Probabilidad en las que va a enviar las trazas, por defecto es un 10%, lo cambiamos a 1%
spring.sleuth.sampler.probability=1.0


